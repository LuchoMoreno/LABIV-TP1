{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/clases/mascota/mascota.ts","webpack:///src/app/componentes/carga-mascota/carga-mascota.component.ts","webpack:///src/app/componentes/carga-mascota/carga-mascota.component.html","webpack:///src/app/componentes/listado/listado.component.ts","webpack:///src/app/componentes/listado/listado.component.html","webpack:///src/app/componentes/mascota/mascota.component.ts","webpack:///src/app/componentes/mascota/mascota.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Mascota","nombre","imagen","tipo","switchColor","color","CargaMascotaComponent","lista","event","push","console","log","enviarAListado","ListadoComponent","detalles","emit","clickDetalles","MascotaComponent","mostrarDetalles","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tp1';\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    \n<app-carga-mascota></app-carga-mascota>\n\n</body>\n</html>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CargaMascotaComponent } from './componentes/carga-mascota/carga-mascota.component';\nimport { MascotaComponent } from './componentes/mascota/mascota.component';\nimport { ListadoComponent } from './componentes/listado/listado.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CargaMascotaComponent,\n    MascotaComponent,\n    ListadoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Mascota {\n\n    nombre : string;\n    tipo : string;\n    imagen : string;\n    color : string;\n    \n    constructor(nombre, imagen, tipo){\n    \n        this.nombre = nombre;\n        this.imagen = imagen;\n        this.tipo = tipo;\n        this.switchColor();\n    }\n\n    public switchColor()\n    {\n        switch(this.tipo)\n        {\n          case \"Perro\":\n            this.color = \"color:green\"\n            break;\n          case \"Gato\":\n            this.color = \"color:red\"\n            break;\n          case \"Pez\":\n            this.color = \"color:blue\"\n            break;\n        }\n      }\n\n    }\n    ","import { Component, OnInit} from '@angular/core';\nimport { Mascota } from 'src/app/clases/mascota/mascota';\n\n// 1- Crear un componente 'carga-mascota' que nos permita cargar nombre, imagen (con inputs) y \n// tipo (con select) y que devuelva por medio de un output los datos cargados.\n\n\n@Component({\n  selector: 'app-carga-mascota',\n  templateUrl: './carga-mascota.component.html',\n  styleUrls: ['./carga-mascota.component.css']\n})\nexport class CargaMascotaComponent implements OnInit {\n\n\n  // CREO LOS ATRIBUTOS DE LA MASCOTA.\n\n  nombre : string = null;\n\n  imagen : string = null;\n\n  tipo : string = null;\n\n\n  // CREO UN ARRAY DE LISTA DE MASCOTAS.\n  lista : Array<Mascota> = [];\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.nombre = \"\";\n  }\n\n\n  public enviarAListado (event): void {\n        \n    this.lista.push(new Mascota(this.nombre, this.imagen, this.tipo));\n    console.log(this.lista);\n  }\n\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    \n\n\n    <div class=\"titulo\" align=\"center\">\n        <h1>VETERINARIA</h1>    \n    </div>\n\n\n\n    <div class=\"Centrado\" >\n\n\n        <div>\n        <label>Nombre del animal: </label>\n        <input [(ngModel)]= \"nombre\" type=\"text\">\n        </div>\n\n        <br>\n\n        <div>\n           <label>URL de la imagen: </label>\n           <input [(ngModel)]= \"imagen\" type=\"text\">\n        </div>\n            \n        <br>\n\n        <div>\n            <label>Tipo de animal: </label>\n            <select name=\"seleccionTipo\" [(ngModel)]=\"tipo\">\n                <option value=\"Perro\">Perro</option>\n                <option value=\"Gato\">Gato</option>\n                <option value=\"Pez\">Pez</option>\n            </select>\n        </div>\n        \n        <br>\n\n        <input (click)=\"enviarAListado($event)\" type=\"button\"  value=\"Enviar\" class=\"buttonCSS\">\n\n\n    </div>\n\n\n    <div class=\"Centrado\" >\n\n    <div *ngFor=\"let mascota of lista; index as i\" class=\"mascota\" width = 50>\n        <app-mascota [mascota]=\"mascota\"> </app-mascota>\n        <hr>\n    </div>\n    \n\n\n</div>\n\n   \n\n</body>\n</html>","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport { Mascota } from 'src/app/clases/mascota/mascota';\n\n@Component({\n  selector: 'app-listado',\n  templateUrl: './listado.component.html',\n  styleUrls: ['./listado.component.css']\n})\nexport class ListadoComponent implements OnInit {\n\n// OUTPUT DETALLE.\n@Output() detalles = new EventEmitter<any>();\n\n// INPUT DE MASCOTA.\n@Input() mascota: Mascota;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  clickDetalles() {\n    this.detalles.emit();\n  }\n\n}\n","<div>\n    <h4 [style]=\"mascota.color\"> {{mascota.nombre}}\n    <input class=\"buttonCSS\" type=\"button\" value=\"Ver detalle\" (click)=\"clickDetalles()\"></h4>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Mascota } from 'src/app/clases/mascota/mascota';\n\n@Component({\n  selector: 'app-mascota',\n  templateUrl: './mascota.component.html',\n  styleUrls: ['./mascota.component.css']\n})\nexport class MascotaComponent implements OnInit {\n\n\n// INPUT DE TIPO MASCOTA.\n@Input() mascota : Mascota;\n\n// BOOLEANO CON DETALLES.\ndetalles : boolean = false;\n\n\nconstructor() { }\n\n  ngOnInit(): void {\n  }\n\npublic mostrarDetalles(event) \n{\n  this.detalles = true;\n}\n\n}\n","<app-listado [mascota]=\"mascota\" (detalles)=\"mostrarDetalles($event)\"> </app-listado>\r\n\r\n\r\n<div *ngIf=\"detalles == true\">\r\n    <h5 [style]=\"mascota.color\">Es de tipo {{mascota.tipo}} </h5>\r\n    <img [src]=\"mascota.imagen\" alt=\"foto\" srcset=\"\">\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}